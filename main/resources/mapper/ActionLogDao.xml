<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wj.dao.ActionLogDao">
    <resultMap id="ActionLogMapperResultMap" type="cn.wj.domain.UserActionLog">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="account_name" property="accountName" jdbcType="VARCHAR"/>
        <result column="session_id" property="sessionId" jdbcType="VARCHAR"/>
        <result column="time" property="time" jdbcType="TIMESTAMP"/>
        <result column="ip_addr_v4" property="ipAddrV4" jdbcType="VARCHAR"/>
        <result column="ip_addr_v6" property="ipAddrV6" jdbcType="VARCHAR"/>
        <result column="os_name" property="osName" jdbcType="VARCHAR"/>
        <result column="os_version" property="osVersion" jdbcType="VARCHAR"/>
        <result column="bro_name" property="broName" jdbcType="VARCHAR"/>
        <result column="bro_version" property="broVersion" jdbcType="VARCHAR"/>
        <result column="request_body" property="requestBody" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="other" property="other" jdbcType="VARCHAR"/>
        <result column="method" property="method" jdbcType="VARCHAR"/>
    </resultMap>
    <!--<sql id="ActionLog_Column_List">-->
    <!--id, account_name, session_id, time, ip_addr_v4, ip_addr_v6, os_name, os_version,-->
    <!--bro_name, bro_version, request_body, description, other, method-->
    <!--</sql>-->

    <!--增加语句-->
    <insert id="add" parameterType="cn.wj.domain.UserActionLog">
        INSERT INTO
            user_action_log (account_name, session_id, TIME, ip_addr_v4, ip_addr_v6, os_name, os_version, bro_name, bro_version, request_body, description, other, METHOD)
        VALUES
            (#{accountName}, #{sessionId}, #{time}, #{ipAddrV4}, #{ipAddrV6}, #{osName}, #{osVersion}, #{broName},
                             #{broVersion}, #{requestBody}, #{description}, #{other}, #{method})
    </insert>
    <!--物理分页：这种分页方法从底层上就是每次只查询对应条目数量的数据，从而实现了真正意义上的分页-->
    <select id="findAll" resultType="cn.wj.domain.UserActionLog" parameterType="java.util.Map">

        SELECT *
        FROM user_action_log
        ORDER BY id

    </select>
    <!--&#45;&#45; ASC-->
    <!--&#45;&#45; LIMIT #{offset}, #{limit};-->
    <select id="getAllCount" resultType="int">
        SELECT COUNT(*)
        FROM user_action_log;
    </select>

    <!--测试-->
    <!--2.6.1 基础编辑指定售货机信息-->
    <update id="updateLogInfo" parameterType="cn.wj.domain.UserActionLog">
        UPDATE user_action_log
        SET
            bro_name=#{broName}
        WHERE  id = #{id}
    </update>

    <!--5更新session的ID（暂时未用到）- -->
    <update id="updateLoginSession">
        UPDATE user_action_log
        SET session_id = #{sessionId}
        WHERE account_name = #{accountName}
    </update>
</mapper>

