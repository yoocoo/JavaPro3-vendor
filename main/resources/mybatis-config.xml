<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- 配置全局属性 -->
    <settings>
        <!-- 使用jdbc的getGeneratedKeys获取数据库自增主键值 -->
        <setting name="useGeneratedKeys" value="true"/>

        <!-- 使用列别名替换列名 默认:true -->
        <setting name="useColumnLabel" value="true"/>

        <!-- 开启驼峰命名转换:Table{create_time} -> Entity{createTime} -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>

        <!--允许在嵌套语句中使用分页（RowBounds）-->
        <setting name="safeRowBoundsEnabled" value="false"/>
    </settings>
    <!--=============6.12 ==Mybatis分页插件-使用 PageHelper 插件分页 =========在Mybatis配置xml中配置拦截器插件:=====-->
    <plugins>
        <!-- com.github.pagehelper为PageHelper类所在包名 -->
        <plugin interceptor="com.github.pagehelper.PageHelper">
            <!-- 4.0.0以后版本可以不设置该参数 -->
            <property name="dialect" value="mysql"/>
            <!-- 该参数默认为false -->
            <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
            <!-- 和startPage中的pageNum效果一样-->
            <property name="offsetAsPageNum" value="true"/>
            <!-- 该参数默认为false -->
            <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
            <property name="rowBoundsWithCount" value="true"/>
            <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
            <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
            <property name="pageSizeZero" value="true"/>
            <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
            <!--实际情况下：如果你分页插件使用于类似分页查看列表式的数据，-->
            <!--如新闻列表，软件列表，你希望用户输入的页数不在合法范围（第一页到最后一页之外）-->
            <!--时能够正确的响应到正确的结果页面，那么你可以配置reasonable为true，这时如果pageNum-->

            <!--<1会查询第一页，如果pageNum>总页数会查询最后一页。-->
            <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
            <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
            <property name="reasonable" value="true"/>

            <!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
            <!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
            <!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 -->
            <!-- 不理解该含义的前提下，不要随便复制该配置 -->
            <property name="params" value="pageNum=start;pageSize=limit;"/>
            <!-- 支持通过Mapper接口参数来传递分页参数 -->
            <property name="supportMethodsArguments" value="true"/>
            <!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
            <property name="returnPageInfo" value="check"/>
        </plugin>
    </plugins>

    <!--=======6.20  配置 (需要一个拦截类Intercept)PageIntercept====-->

    <!--<typeAliases>-->
    <!--<typeAlias alias="page" type="cn.wj.domain.PageObject"/>-->
    <!--</typeAliases>-->
    <!--<plugins>-->
    <!--<plugin interceptor="cn.wj.intercepter.PageIntercepter"></plugin>-->
    <!--</plugins>-->

    <!--=====5.30日==如果你正在使用 Spring + MyBatis，则没有必要配置事务管理器， 因为 Spring 模块会使用自带的管理器来覆盖前面的配置。-->
</configuration>

        <!--一个配置完整的 settings 元素的示例如下-->
        <!--<settings>-->
        <!--<setting name="cacheEnabled" value="true"/> 	该配置影响的所有映射器中配置的缓存的全局开关-->
        <!--<setting name="lazyLoadingEnabled" value="true"/> 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 特定关联关系中可通过设置fetchType属性来覆盖该项的开关状态。 -->
        <!--<setting name="multipleResultSetsEnabled" value="true"/>    是否允许单一语句返回多结果集（需要兼容驱动）。-->
        <!--<setting name="useColumnLabel" value="true"/> 使用列标签代替列名。-->
        <!--<setting name="useGeneratedKeys" value="false"/> 允许 JDBC 支持自动生成主键，需要驱动兼容。-->
        <!--<setting name="autoMappingBehavior" value="PARTIAL"/> 指定 MyBatis 应如何自动映射列到字段或属性。-->
        <!--<setting name="autoMappingUnknownColumnBehavior" value="WARNING"/> 指定发现自动映射目标未知列（或者未知属性类型）的行为。-->
        <!--<setting name="defaultExecutorType" value="SIMPLE"/> 	配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（prepared statements）； BATCH 执行器将重用语句并执行批量更新。-->
        <!--<setting name="defaultStatementTimeout" value="25"/> 	设置超时时间，它决定驱动等待数据库响应的秒数。-->
        <!--<setting name="defaultFetchSize" value="100"/>	为驱动的结果集获取数量（fetchSize）设置一个提示值。此参数只可以在查询设置中被覆盖。-->
        <!--<setting name="safeRowBoundsEnabled" value="false"/> 	允许在嵌套语句中使用分页（RowBounds）。-->
        <!--<setting name="mapUnderscoreToCamelCase" value="false"/> 	是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射。-->
        <!--<setting name="localCacheScope" value="SESSION"/>MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。 默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询。 若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlSession 的不同调用将不会共享数据。-->
        <!--<setting name="jdbcTypeForNull" value="OTHER"/>当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型-->
        <!--<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>	指定哪个对象的方法触发一次延迟加载。-->
        <!--</settings>-->